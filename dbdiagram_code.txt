// Filmorate Database Schema for dbdiagram.io
// Скопируйте этот код и вставьте на https://dbdiagram.io/

Table users {
  id int [pk, increment, not null]
  email varchar(255) [unique, not null]
  login varchar(50) [unique, not null]
  name varchar(100)
  birthday date
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    (email)
    (login)
  }
}

Table films {
  id int [pk, increment, not null]
  name varchar(200) [not null]
  description varchar(200)
  release_date date [not null]
  duration int [not null]
  mpa_rating_id int [ref: > mpa_ratings.id, not null]
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    (release_date)
    (mpa_rating_id)
  }
}

Table genres {
  id int [pk, increment, not null]
  name varchar(50) [unique, not null]
  created_at timestamp [default: `now()`]
}

Table mpa_ratings {
  id int [pk, increment, not null]
  code varchar(10) [unique, not null]
  description varchar(200) [not null]
  created_at timestamp [default: `now()`]
}

Table film_genres {
  id int [pk, increment, not null]
  film_id int [ref: > films.id, not null]
  genre_id int [ref: > genres.id, not null]
  created_at timestamp [default: `now()`]
  
  indexes {
    (film_id, genre_id) [unique]
    (film_id)
    (genre_id)
  }
}

Table user_friends {
  id int [pk, increment, not null]
  user_id int [ref: > users.id, not null]
  friend_id int [ref: > users.id, not null]
  status varchar(20) [not null, default: 'UNCONFIRMED']
  created_at timestamp [default: `now()`]
  updated_at timestamp [default: `now()`]
  
  indexes {
    (user_id, friend_id) [unique]
    (user_id)
    (friend_id)
    (status)
  }
}

Table film_likes {
  id int [pk, increment, not null]
  film_id int [ref: > films.id, not null]
  user_id int [ref: > users.id, not null]
  created_at timestamp [default: `now()`]
  
  indexes {
    (film_id, user_id) [unique]
    (film_id)
    (user_id)
  }
}
